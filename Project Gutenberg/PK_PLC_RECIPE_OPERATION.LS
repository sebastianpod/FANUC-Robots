/PROG  PK_PLC_RECIPE_OPERATION
/ATTR
OWNER		= MNEDITOR;
COMMENT		= "RecOperationPLC";
PROG_SIZE	= 3842;
CREATE		= DATE 09-03-02  TIME 18:39:52;
MODIFIED	= DATE 16-09-28  TIME 10:41:10;
FILE_NAME	= ;
VERSION		= 0;
LINE_COUNT	= 153;
MEMORY_SIZE	= 4310;
PROTECT		= READ_WRITE;
TCD:  STACK_SIZE	= 0,
      TASK_PRIORITY	= 50,
      TIME_SLICE	= 0,
      BUSY_LAMP_OFF	= 0,
      ABORT_REQUEST	= 7,
      PAUSE_REQUEST	= 7;
DEFAULT_GROUP	= *,*,*,*,*;
CONTROL_CODE	= 00000000 00000000;
LOCAL_REGISTERS	= 0,0,0;
/MN
   1:  !-------------------------------- ;
   2:  ! Communication program between a ;
   3:  ! PLC and iRPickTool to perform ;
   4:  ! Recipe operations. ;
   5:  ! This program runs if the Recipe ;
   6:  ! Change DI setup in the Recipe ;
   7:  ! menu is turned on. ;
   8:  ! Users can modify the PLC ;
   9:  ! handshake - you can change ;
  10:  ! the DI/DO, GI/GO and registers ;
  11:   ;
  12:  !-------------------------------- ;
  13:   ;
  14:  !Recipe Operation Function Codes ;
  15:  ! CREATE    = 1 ;
  16:  ! DELETE    = 3 ;
  17:  ! SAVE_ACTIV_RECIPE = 4 ;
  18:  ! RESTORE_ACTIVE_RECIPE = 5 ;
  19:  ! EXPORT    = 6 ;
  20:  ! IMPORT    = 7 ;
  21:  ! SWITCH    = 8 ;
  22:  ! ;
  23:  ! Numeric registers R[95]-R[98] ;
  24:  ! are used in this program. ;
  25:  ! Users can re-assign the ;
  26:  ! registers to other numbers ;
  27:  ! to suit their conveninence. ;
  28:  ! ;
  29:  !R[95] is used for storing status ;
  30:   ;
  31:   ;
  32:  ! Turn off DO[33] (Success) ;
  33:  DO[33]=OFF ;
  34:  ! Turn off DO[34] (Error) ;
  35:  DO[34]=OFF ;
  36:   ;
  37:  !Tell PLC robot ready to receive ;
  38:  DO[32]=ON ;
  39:  ! Wait for PLC ready to send ;
  40:  WAIT DI[32]=ON TIMEOUT,LBL[4000] ;
  41:  !Read function code ;
  42:  R[97:TemporaryUse3]=GI[1]    ;
  43:  ! Echo Recipe Operation to PLC ;
  44:  GO[1]=R[97:TemporaryUse3] ;
  45:  ! Signal PLC that data received. ;
  46:  DO[32]=OFF ;
  47:  ! Wait for PLC acknowledgement. ;
  48:  WAIT DI[32]=OFF TIMEOUT,LBL[4000] ;
  49:   ;
  50:  SELECT R[97:TemporaryUse3]=1,JMP LBL[100] ;
  51:         =3,JMP LBL[300] ;
  52:         =4,JMP LBL[400] ;
  53:         =5,JMP LBL[500] ;
  54:         =6,JMP LBL[600] ;
  55:         =7,JMP LBL[700] ;
  56:         =8,JMP LBL[800] ;
  57:         ELSE,JMP LBL[4000] ;
  58:   ;
  59:  LBL[100:Create] ;
  60:  !Tell PLC robot ready to receive ;
  61:  DO[32]=ON ;
  62:  ! Wait for PLC ready to send ;
  63:  WAIT DI[32]=ON TIMEOUT,LBL[4000] ;
  64:  ! Read recipe_id register ;
  65:  R[98:TemporaryUse4]=GI[1]    ;
  66:  ! Echo Recipe Id reg to PLC ;
  67:  GO[1]=R[98:TemporaryUse4] ;
  68:  ! Signal PLC that data received. ;
  69:  DO[32]=OFF ;
  70:  ! Wait for PLC acknowledgement. ;
  71:  WAIT DI[32]=OFF TIMEOUT,LBL[4000] ;
  72:  !Tell PLC robot ready to receive ;
  73:  DO[32]=ON ;
  74:  ! Wait for PLC ready to send ;
  75:  WAIT DI[32]=ON TIMEOUT,LBL[4000] ;
  76:  ! Read string reg id for storing ;
  77:  ! recipe name ;
  78:  R[96:TemporaryUse2]=GI[1]    ;
  79:  ! Echo string reg Id to PLC ;
  80:  GO[1]=R[96:TemporaryUse2] ;
  81:  ! Signal PLC that data received. ;
  82:  DO[32]=OFF ;
  83:  ! Wait for PLC acknowledgement. ;
  84:  WAIT DI[32]=OFF TIMEOUT,LBL[4000] ;
  85:  CALL PKRCCREATE("RecipeID Reg"=R[98:TemporaryUse],"RecipeNm StrReg"=R[96:Temporary],"Stat Reg"=95) ;
  86:  JMP LBL[5000] ;
  87:   ;
  88:  LBL[300:Delete] ;
  89:  !Tell PLC robot ready to receive ;
  90:  DO[32]=ON ;
  91:  ! Wait for PLC ready to send ;
  92:  WAIT DI[32]=ON TIMEOUT,LBL[4000] ;
  93:  ! Read recipe id to delete ;
  94:  R[98:TemporaryUse4]=GI[1]    ;
  95:  ! Echo Recipe Id to PLC ;
  96:  GO[1]=R[98:TemporaryUse4] ;
  97:  ! Signal PLC that data received. ;
  98:  DO[32]=OFF ;
  99:  ! Wait for PLC acknowledgement. ;
 100:  WAIT DI[32]=OFF TIMEOUT,LBL[4000] ;
 101:  CALL PKRCDELETE("Recipe ID"=R[98:TemporaryUse4],"Stat Reg"=95) ;
 102:  JMP LBL[5000] ;
 103:   ;
 104:  LBL[400:Save] ;
 105:  CALL PKRCSAVE("Stat Reg"=95) ;
 106:  JMP LBL[5000] ;
 107:   ;
 108:  LBL[500:Restore] ;
 109:  CALL PKRCRESTORE("Stat Reg"=95) ;
 110:  JMP LBL[5000] ;
 111:   ;
 112:  LBL[600:Export] ;
 113:  CALL PKRCEXPORT("Stat Reg"=95) ;
 114:  JMP LBL[5000] ;
 115:   ;
 116:  LBL[700:Import] ;
 117:  CALL PKRCIMPORT("Stat Reg"=95) ;
 118:  JMP LBL[5000] ;
 119:   ;
 120:  LBL[800:Switch] ;
 121:  !Tell PLC robot ready to receive ;
 122:  DO[32]=ON ;
 123:  ! Wait for PLC ready to send ;
 124:  WAIT DI[32]=ON TIMEOUT,LBL[4000] ;
 125:  ! Read recipe id to switch to ;
 126:  R[98:TemporaryUse4]=GI[1]    ;
 127:  ! Echo Recipe Id to PLC ;
 128:  GO[1]=R[98:TemporaryUse4] ;
 129:  ! Signal PLC that data received. ;
 130:  DO[32]=OFF ;
 131:  ! Wait for PLC acknowledgement. ;
 132:  WAIT DI[32]=OFF TIMEOUT,LBL[4000] ;
 133:  CALL PKRCACTIVE("Recipe ID"=R[98:TemporaryUse4],"Stat Reg"=95) ;
 134:  JMP LBL[5000] ;
 135:   ;
 136:  LBL[4000:PLC Recipe Error] ;
 137:  ! 127294 = PLC Rec Op failed ;
 138:  R[95:TemporaryUse1]=127294    ;
 139:  JMP LBL[5000] ;
 140:   ;
 141:  LBL[5000:Check status] ;
 142:  IF (R[95:TemporaryUse1]<>0) THEN ;
 143:  ! Turn Error DO on ;
 144:  DO[34]=ON ;
 145:  ! Post error and abort ;
 146:  CALL PKPOSTERR("Error Code"=R[95:TemporaryUse1],"ABORT"=2) ;
 147:  ELSE ;
 148:  ! Turn success DO on ;
 149:  DO[33]=ON ;
 150:  ENDIF ;
 151:  JMP LBL[10000] ;
 152:   ;
 153:  LBL[10000:End] ;
/POS
/END
